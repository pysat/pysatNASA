# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Package

on: [push, pull_request]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        numpy_ver: [latest]
        include:
          - python-version: 3.7
            numpy_ver: 1.17

    name: Python ${{ matrix.python-version }} with numpy ${{ matrix.numpy_ver }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      env:
        NUMPY_VER: ${{ matrix.numpy_ver }}
      run: |
        python -m pip install --upgrade pip
        pip install -r test_requirements.txt
        pip install -r requirements.txt
        if [ $NUMPY_VER = 'latest' ]; then
          pip install numpy --upgrade;
        else
          pip install --no-binary :numpy: numpy==$NUMPY_VER;
        fi

    - name: Set up pysat
      run: |
        mkdir pysatData
        python -c "import pysat; pysat.params['data_dirs'] = './pysatData'"

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest --cov=pysatNASA/
    - name: Publish results to coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --rcfile=setup.cfg --service=github
