# This workflow will install Python dependencies and the latest RC of pysatNASA from test pypi.
# This test should be manually run before a pysatNASA RC is officially approved and versioned.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test install of latest RC from pip

on: [workflow_dispatch]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.11"]  # Keep this version at the highest supported Python version
        test_config: ["latest"]
        include:
          - python-version: "3.9"
            numpy_ver: "1.21"
            os: ubuntu-latest
            test_config: "NEP29"
          - python-version: "3.6.8"
            numpy_ver: "1.19.5"
            os: "ubuntu-20.04"
            test_config: "Ops"

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install standard dependencies
      if: ${{ matrix.test_config == 'latest'}}
      run: pip install -r requirements.txt

    - name: Install Operational dependencies
      if: ${{ matrix.test_config == 'Ops'}}
      run: |
        pip install --no-cache-dir numpy==${{ matrix.numpy_ver }}
        pip install "cdflib<1.0"
        pip install importlib_metadata
        pip install -r requirements.txt

    - name: Install NEP29 dependencies
      if: ${{ matrix.test_config == 'NEP29'}}
      run: |
        pip install numpy==${{ matrix.numpy_ver }}
        pip install -r requirements.txt

    - name: Install pysatNASA RC
      run: pip install --no-deps --pre -i https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ pysatNASA

    - name: Set up pysat
      run: |
        mkdir pysatData
        python -c "import pysat; pysat.params['data_dirs'] = 'pysatData'"

    - name: Check that install imports correctly
      run: |
        cd ..
        python -c "import pysatNASA; print(pysatNASA.__version__)"
